/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package behavioranalyst;

import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Balaji
 */
public class startFrameEntryDialog extends javax.swing.JDialog {

    /**
     * Creates new form startFrameEntryDialog
     */
    private boolean Up2date = false; // true - ready, false - not ready
    private int[] startFrames;
    private int NoE;
    private int nFrames = 1800;
    
    public startFrameEntryDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        startframeTable = new javax.swing.JTable();
        Update_Data_Button = new javax.swing.JButton();
        IncludeAllFrames_CheckBox = new javax.swing.JCheckBox();
        addButton = new javax.swing.JButton();
        totFrames = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        EstimateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Enter the trial start frame numbers");
        setAutoRequestFocus(false);

        startframeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Data FileName", "Trial starts at"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        startframeTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        startframeTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(startframeTable);
        startframeTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (startframeTable.getColumnModel().getColumnCount() > 0) {
            startframeTable.getColumnModel().getColumn(0).setResizable(false);
        }

        Update_Data_Button.setText("Update Data");
        Update_Data_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_Data_ButtonActionPerformed(evt);
            }
        });

        IncludeAllFrames_CheckBox.setText(" Include All Frames");

        addButton.setText("Add rows");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        totFrames.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totFrames.setText("1800");
        totFrames.setToolTipText("Enter the total number of frames");

        jLabel1.setText("Enter the total number of frames");

        EstimateButton.setText("Click here to estimate");
        EstimateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EstimateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(IncludeAllFrames_CheckBox)
                        .addGap(31, 31, 31)
                        .addComponent(addButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totFrames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Update_Data_Button)
                    .addComponent(EstimateButton))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(totFrames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EstimateButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IncludeAllFrames_CheckBox)
                    .addComponent(Update_Data_Button)
                    .addComponent(addButton))
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Update_Data_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_Data_ButtonActionPerformed
        // TODO add your handling code here
        int numberofEntries = startframeTable.getRowCount();
        
        for(int count = 0 ; count < numberofEntries ; count++){
            this.startFrames[count] = (int)startframeTable.getValueAt(count, 2);
        }
        nFrames = Integer.valueOf(totFrames.getText());
        this.NoE  = numberofEntries;
        setUp2date(true);
    }//GEN-LAST:event_Update_Data_ButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tabmodel = (DefaultTableModel)startframeTable.getModel();
        tabmodel.addRow(new Object[] {"",""});
    }//GEN-LAST:event_addButtonActionPerformed

    private void EstimateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EstimateButtonActionPerformed
        // TODO add your handling code here:
        JTextField fpsEntry = new JTextField("30");
        JTextField duration = new JTextField("1800");
        Object message [] = {
            "Enter the framerate (fps)", fpsEntry,
            "Enter the duration of trial (s)", duration,
        };
        JOptionPane EstimateDialog = new JOptionPane();
        int result;
        result = JOptionPane.showConfirmDialog(this, message, "Enter the parameters",JOptionPane.OK_CANCEL_OPTION);
        
        if(result == JOptionPane.OK_OPTION ){
           totFrames.setText ( ""+ Integer.valueOf(fpsEntry.getText()) *Integer.valueOf(duration.getText()));
        }
    }//GEN-LAST:event_EstimateButtonActionPerformed

   public boolean getIncludeAllFramesStatus(){
              return IncludeAllFrames_CheckBox.isSelected();
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EstimateButton;
    private javax.swing.JCheckBox IncludeAllFrames_CheckBox;
    private javax.swing.JButton Update_Data_Button;
    private javax.swing.JButton addButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable startframeTable;
    private javax.swing.JTextField totFrames;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the Up2date
     */
    public boolean isUp2date() {
        return Up2date;
    }

    /**
     * @param Up2date the Up2date to set
     */
    public void setUp2date(boolean Up2date) {
        this.Up2date = Up2date;
    }

    /**
     * @return the startFrames
     */
    public int[] getStartFrames() {
        return startFrames;
    }

    /**
     * @return the nFrames
     */
    public int getnFrames() {
        return nFrames;
    }
}
